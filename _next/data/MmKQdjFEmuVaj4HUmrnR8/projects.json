{"pageProps":{"projects":[{"details":{"title":"Personal Website","short-description":"My personal website!","thumbnail":"assets/personal-website.png","blur-rgb":"240,252,244","start-date":"May 2020","end-date":"","repo-url":"https://github.com/samuel-ping/personal-website","website-url":"https://samuel-ping.github.io","technologies":"Next.js, Tailwind CSS, Netlify CMS, Matomo Analytics"},"description":"\n## Summary\n\nMy personal website is built with Next.js and styled with Tailwind CSS. This is the third iteration of my personal website!\n\n### Past Features\n\n#### Netlify CMS\n\nI originally added Netlify CMS to simplify content creation on my site. I hosted a server on Heroku to authenticate me to access my CMS. Unfortunately Heroku/Salesforce terminated their free hosting plan so I got rid of it.\n\n#### Matomo Analytics\n\nIn the past, I had also set up Matomo Analytics for fun, to see where in the world people are looking at my website from! But my server was secretly hosted on an anonymous AWS employee's account and sadly they don't work there anymore.\n\n## Previous Versions\n\n**v2**: I didn't like my first version, so I remade it.\n\n**v1**: The [original version of my personal website](https://samuel-ping.github.io/personal-website-v1) was also my first time using React. I built it after Food Mood v1, so I had a basic understanding of web development and wanted to transfer that knowledge to React. Frankly, my first website was a bit of a mess, but I do think I'm a bit better at web development now. While I'm not the best at it, at least I know I'm capable of cranking out a website if I need to!\n"},{"details":{"title":"PlantFam","short-description":"Plant tracking mobile application.","start-date":"January 2022","end-date":"","repo-url":"https://github.com/samuel-ping/PlantFam-Android","technologies":"Kotlin, Jetpack Compose, MongoDB Realm, AWS Amplify"},"description":"\nPlant tracking Android application. I feel like the tech stack I chose is questionable but at the same time I also feel like I'm in too deep...\n"},{"details":{"title":"matchat","short-description":"Coffee chat roulette Slack application.","start-date":"July 2022","end-date":"July 2022","repo-url":"https://github.com/samuel-ping/matchat","technologies":"Python 3, Flask, AWS EC2"},"description":"\nA Slack application that matches interns to full-time employees for coffee chats every week!\n"},{"details":{"title":"Shrimpify","short-description":"Image file size optimization API.","start-date":"June 2022","end-date":"June 2022","repo-url":"https://github.com/samuel-ping/shrimpify","technologies":"Golang"},"description":"\nImage file size optimization server. I originally built this to automatically shrink images for my PlantFam app, but then I realized that wasn't exactly an offline-first approach for my mobile application. So now I just have this image compression API and I don't know what to do with it.\n\nThis project is named after my little Echeveria fleur blanc succulent, Shrimp.\n"},{"details":{"title":"COVID Tracker","short-description":"A web app that quickly gives you COVID-19 data. Best Halloween Hack of TCNJ HackDown Fall 2020!","thumbnail":"https://raw.githubusercontent.com/samuel-ping/covid-tracker/master/screenshots/covid_tracker_banner.png","blur-rgb":"48,44,52","start-date":"October 2020","end-date":"November 2020","repo-url":"https://github.com/samuel-ping/covid-tracker","website-url":"https://covid-tracker-1.web.app/","technologies":"React.js, Express.js, Google Firebase"},"description":"\n**NOTE**: The live website doesn't work unless you run the backend locally on your computer!\n\n## Summary\n\nThis web app tells you the current number of COVID-19 cases in your state, as well as other useful information. It is intended to be a quick and easy tool that nearly instantly retrieves relevant data. This project was submitted to TCNJ HackDown Fall 2020, and we won Best Halloween Hack!\n\nI made this project with a mentee and a friend who were both new to hackathons and web development. Because of that, I tried to mentor them throughout the hackathon, and it all worked out in the end!\n"},{"details":{"title":"chat_stat","short-description":"Explore your messaging history with your friends!","thumbnail":"https://raw.githubusercontent.com/samuel-ping/chat_stat/main/screenshots/chat_stat-header-color-cropped.png","blur-rgb":"224,20,60","start-date":"November 2020","end-date":"November 2020","repo-url":"https://github.com/samuel-ping/chat_stat","technologies":"Python 3"},"description":"\n## Summary\n\nChat_Stat is a command-line tool that parses message history and displays charts and statistics about the messaging history. When I wrote this program, I made an effort to follow Python best practices, which included:\n\n- Using a config file over global variables.\n- Creating a Python virtual environment and using a `requirements.txt` file to keep track of Pip packages.\n- Organizing my code by splitting my it into multiple files.\n- Documenting each function I wrote, as well as how to install and use the tool.\n\nIn addition to those, I also learned about many other topics. This includes:\n\n- Object-oriented programming in Python.\n- Python data structures.\n- Stopwords and other methods of cleaning data. While there's no AI going on in my tool, it was interesting to learn that stopwords are commonly used to clean data in natural language processing.\n"},{"details":{"title":"Food Mood","short-description":"Web app that takes your photo, detects your visible mood, and suggests a restaurant based off that mood!","thumbnail":"assets/food-mood-thumbnail-raw.jpg","blur-rgb":"47,61,77","start-date":"March 2020","end-date":"August 2020","repo-url":"https://github.com/samuel-ping/food-mood","technologies":"React.js, Express.js, Node.js, AWS (Lambda, Amplify, EC2, CodeDeploy+CodePipeline, S3), Nginx"},"description":"\n## Summary\n\nFood Mood is a web app that takes your photo, detects your visible mood, and suggests a restaurant based off of that mood!\n\nThe frontend is written in React.js, while the backend uses Express.js and Node.js. The backend is a Lambda function hosted on AWS Lambda, which makes a call to Yelp's Fusion API and Amazon's Rekognition API.\n\n**v3**: My current and most likely final iteration of Food Mood is v3. I completely revamped the way the website looks, making it more visually appealing. I also switched over from hosting on AWS EC2 to AWS Amplify to see what Amplify is like.\n\n## Previous Versions\n\n**v2**: The frontend is built with React.js, while the backend uses Express.js and Node.js. The emotions are detected from the photo using Amazon's Rekognition API, and then I search for a restaurant using Yelp's Fusion API. The website is deployed on an AWS EC2 instance, using Nginx as a reverse proxy. Updates to the application are automatically deployed with AWS CodePipeline and CodeDeploy.\n\n**v1**: The [original Food Mood](https://oldmyfoodmood.herokuapp.com/) was my first ever website, and I built it as an entry to Capital One's Software Engineering Summit challenge. I originally was going to use solely HTML, CSS, and JavaScript, but I quickly learned that I had no way of hiding my API keys from the client. After much frustration, I found Node.js and Express.js and decided to hail mary it and learn how to create a backend. I'm really proud of this project, because I decided to pursue this project at the last minute and had less than two days to complete it. After the competition ended (I was accepted into the summit!), I decided to continue working on this project. I revamped the whole website with React and deployed it on an AWS EC2 Ubuntu instance to avoid the yucky slow loading times of Heroku.\n"},{"details":{"title":"Street Cred","short-description":"Web app that calculates your credit score and generates feedback based on the five main categories that make up your credit score.","thumbnail":"assets/streetcredlogo.png","blur-rgb":"248,52,92","start-date":"August 2020","end-date":"August 2020","repo-url":"https://github.com/samuel-ping/street-cred","technologies":"React.js, Python, AWS Lambda & API Gateway"},"description":"\n## Summary\n\nA web application that calculates your credit score and generates feedback based on the five main categories that make up your credit score.\n\nI built this web app with four other talented students for Capital One's Software Engineering Summit, and we won third place overall for this web app!\n"},{"details":{"title":"Yelp Review Scraper","short-description":"A web scraper intended to gather a large dataset of restaurants.","start-date":"May 2020","end-date":"June 2020","repo-url":"https://github.com/samuel-ping/yelp-review-scraper","technologies":"Python 3, Beautiful Soup 4"},"description":"\n## Summary\n\nI created a Yelp review scraper that is intended to gather a large dataset of Yelp Reviews. While it works, it eventually gets stopped by Yelp's CAPTCHA :( Oh well, if I ever need a Yelp dataset, I think I'll have to use Kaggle.\n"},{"details":{"title":"Wild Walk","short-description":"A web app that encourages you to go exploring!","thumbnail":"assets/wildwalk-logo.jpg","blur-rgb":"48,92,68","start-date":"May 2020","end-date":"May 2020","repo-url":"https://github.com/samuel-ping/wildwalk","technologies":"React.js, Express.js, MongoDB Atlas"},"description":"\n## Summary\n\nA web app built for mobile devices, where you can check native species of plants and animals in your state, and upload pictures of them to your collection. You can view your collection to see the past species that you collected.\n\nI built this as an entry to BackyardHacks 2020 and is not a finished product. It was my first time using a database in an application and while it worked locally, the deployed version does not work. I did learn how to use Postman, which I used to test the endpoints of the NatureServe REST API.\n"}]},"__N_SSG":true}